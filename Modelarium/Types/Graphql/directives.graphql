"""
Casts type
"""
directive @casts(
    """
    The value
    """
    type: String!
) on FIELD_DEFINITION

"""
Do not generate frontend for this type
"""
directive @frontendSkip on OBJECT

"""
Alters a table on migration after it was created.
"""
directive @migrationAlterTable(
    """
    The commands to run, which will be prepended with 'ALTER TABLE tablename"
    """
    values: [String!]!
) on OBJECT

"""
Default value for database column
"""
directive @migrationDefaultValue(
    """
    The value
    """
    value: String!
) on FIELD_DEFINITION

"""
Foreign keys
"""
directive @migrationForeign(
    """
    What field it references
    """
    references: String

    """
    What table it references
    """
    on: String

    """
    What to do onDelete
    """
    onDelete: String

    """
    What to do on Update
    """
    onUpdate: String
) on FIELD_DEFINITION

"""
Add a full text index to table
"""
directive @migrationFulltextIndex(
    """
    The fields to index. Must be an array even if it is just one field.
    """
    fields: [String!]!
) on OBJECT

"""
Generates a composed index on the database for a type
"""
directive @index(
    """
    The list of fields to compose in the index
    """
    fields: [String!]!
) on OBJECT

"""
Specifies that remember me tokens should be created on DB.
"""
directive @migrationRememberToken on OBJECT

"""
Do not add this field to the migration
"""
directive @migrationSkip on FIELD_DEFINITION

"""
Specifies a soft delete mode for this type
"""
directive @migrationSoftDeletes on OBJECT

"""
Generates a migrationSpatialIndex
"""
directive @migrationSpatialIndex(
    """
    The field for the index
    """
    field: String!
) on OBJECT

"""
Generates a timestamps columns for a type
"""
directive @migrationTimestamps on OBJECT

"""
Generates a unique index on the database for that field
"""
directive @migrationUniqueIndex on FIELD_DEFINITION

"""
Base class to extend on model.
"""
directive @minLength(
    """
    The base class name with namespace
    """
    value: Int!
) on OBJECT

"""
Base class to extend on model.
"""
directive @modelExtends(
    """
    The base class name with namespace
    """
    class: String!
) on OBJECT

"""
Field is added to Model::$fillable
"""
directive @modelFillable on FIELD_DEFINITION

"""
Field is added to Model::hidden
"""
directive @modelHidden on FIELD_DEFINITION

"""
Use a MustVerifyEmail trait on a model
"""
directive @modelMustVerifyEmail on OBJECT

"""
Use a Notifiable trait on a model
"""
directive @modelNotifiable on OBJECT

"""
Do not generate model (and seeder/factory/etc) for this type
"""
directive @modelSkip on OBJECT

"""
Generate renderable
"""
directive @renderable on FIELD_DEFINITION | OBJECT

"""
Do not process this type in Modelarium. Will not create models, migrations, etc
"""
directive @typeSkip on OBJECT

type Can {
  ability: String!
  value: Boolean!
}
