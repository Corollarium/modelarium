name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ["7.3", "7.4", "8.0"]

    name: PHP ${{ matrix.php-versions }} Test
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl

      - name: Check php version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run test suite
        run: composer run-script test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          extensions: mbstring, intl
          coverage: xdebug

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-7.4-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-7.4

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Generate coverage clover
        env:
          CODE_COVERAGE: yes
        run: vendor/bin/phpunit --bootstrap vendor/autoload.php --whitelist Modelarium --coverage-clover ./clover.xml tests/

      # For code coverage report we are uploading our code coverage report to scrutinizer
      - name: Downloading scrutinizer ocular.phar
        run: wget https://scrutinizer-ci.com/ocular.phar

      # Uploading reports for analysis
      - name: Uploading code coverage to scrutinize
        run: php ocular.phar code-coverage:upload --format=php-clover ./clover.xml

      - name: Quality assurance
        env:
          STATIC_ANALYSIS: yes
        run: composer stan

      - name: Coverage html
        env:
          STATIC_ANALYSIS: yes
        run: composer coverage

      - name: Create api doc
        env:
          DOCUMENTATION: yes
        run: composer apidoc

      - name: Nojekyll
        run: touch docs/coverage-report/.nojekyll
#       - name: Deploy ðŸš€
#         uses: JamesIves/github-pages-deploy-action@3.7.1
#         with:
#           GITHUB_TOKEN: ${{ secrets.PUBLISH_GITHUB_TOKEN }}
#           BRANCH: gh-pages # The branch the action should deploy to.
#           FOLDER: docs/ # The folder the action should deploy.
#           CLEAN: true # Automatically remove deleted files from the deploy branch

